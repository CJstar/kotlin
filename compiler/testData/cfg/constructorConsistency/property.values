== My ==
class My(x: Int) {
    val y: Int = foo(x)

    fun foo(x: Int): Int = x + y
}
---------------------
         <v0>: Int   NEW: magic[FAKE_INITIALIZER](x: Int) -> <v0>
         <v1>: My    NEW: magic[IMPLICIT_RECEIVER](foo(x)) -> <v1>
x        <v2>: Int   NEW: r(x) -> <v2>
foo(x)   <v3>: Int   NEW: call(foo(x), foo|<v1>, <v2>) -> <v3>
=====================
== foo ==
fun foo(x: Int): Int = x + y
---------------------
        <v0>: Int   NEW: magic[FAKE_INITIALIZER](x: Int) -> <v0>
        <v2>: My    NEW: magic[IMPLICIT_RECEIVER](y) -> <v2>
x       <v1>: Int   NEW: r(x) -> <v1>
y       <v3>: Int   NEW: r(y|<v2>) -> <v3>
x + y   <v4>: Int   NEW: call(x + y, plus|<v1>, <v3>) -> <v4>
=====================
