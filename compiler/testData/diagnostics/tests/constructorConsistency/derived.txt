package

internal open class Base {
    public constructor Base(/*0*/ x: kotlin.Int)
    internal final val x: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun foo(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal final class Derived : Base {
    public constructor Derived(/*0*/ x: kotlin.Int)
    internal final override /*1*/ /*fake_override*/ val x: kotlin.Int
    internal final val y: kotlin.Int
    internal final val z: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final override /*1*/ /*fake_override*/ fun foo(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
