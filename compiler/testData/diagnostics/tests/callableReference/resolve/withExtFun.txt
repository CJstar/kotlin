package

internal val userOfX0: kotlin.Unit
internal val x0: kotlin.reflect.KFunction1<A, kotlin.Unit>
internal val x1: (A) -> kotlin.Unit
internal val x2: kotlin.reflect.KProperty1<A, kotlin.Int>
internal val x3: kotlin.reflect.KProperty1<A, kotlin.Int>
internal val x4: (A) -> kotlin.String
internal val y0: kotlin.reflect.KFunction1<A, kotlin.Unit>
internal val y1: (A) -> kotlin.Unit
internal val y2: kotlin.reflect.KProperty1<A, kotlin.Int>
internal val y3: kotlin.reflect.KProperty1<A, kotlin.Int>
internal fun </*0*/ T> ofType(/*0*/ x: T): T
internal fun A.foo(): kotlin.String

internal final class A {
    public constructor A()
    internal final val bar: kotlin.Int = 0
    internal final val foo: kotlin.Int = 0
    internal final fun bar(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
